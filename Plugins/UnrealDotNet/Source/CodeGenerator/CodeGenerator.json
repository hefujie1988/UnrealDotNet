{
  "DllEditorImportName": "UE4Editor-UnrealDotNetRuntime",
  "DllPaksImportName": "DotUnrealExample.exe",
  "EnginePathSeg": "Engine\\Source",
  "ExportPrefix": "E_",
  "ExportOperatorPrefix": "E_OPER_",
  "ExportPropertyPrefix": "E_PROP_",
  "ExportProtectedPrefix": "E_PROTECTED_WRAP_",
  "ExportProtectedPostfix": "_WRAP",
  "ExportEventAddPrefix": "E_EVENT_ADD_",
  "ExportEventRemovePrefix": "E_EVENT_DEL_",
  "EventPrivatePrefix": "_Event_",
  "EventInvokePrefix": "InvokeEvent_",
  "EventPropertyGetPostfix": "_GET",
  "EventPropertySetPostfix": "_SET",
  "CppPch": "UnrealDotNetRuntime",
  "CppApi": "DOTNET_EXPORT",
  "CppApiUe": "UNREALDOTNETRUNTIME_API",
  "GenerateStatFile": "..\\..\\Source\\UnrealEngineSharp\\Generate\\summary.txt",
  "IsDisableReSharperWarnings": true,
  "IsWriteSourceFileName": true,
  "IsGenerateFileHeader": true,
  "Filter": {
    "TemplateWhiteList": [
      "TArray",
      "TSet"
    ],
    "ClassBlackList": [
      "FSeamlessTravelHandler",
      "FLevelCollection",
      "FWorldAsyncTraceState",
      "FMarkActorIsBeingDestroyed",
      "FSplinePositionLinearApproximation",
      "FStaticMeshComponentLODInfo",
      "FGaussianSumBloomSettings",
      "FPendingAutoReceiveInputActor",
      "FPrecomputedVolumeDistanceField",
      "FPrecomputedVisibilityHandler",
      "FUObjectItem",
      "UForceFeedbackComponent",
      "USplineComponent",
      "USplineMeshComponent",
      "UApplicationLifecycleComponent",
      "UPlatformEventsComponent",
      "UStereoLayerComponent",
      "UModelComponent",
      "UWindDirectionalSourceComponent",
      "UHierarchicalInstancedStaticMeshComponent",
      "FWorldDelegates",
      "FSkelMeshSkinWeightInfo",
      "FRenderStateRecreator",
      "FNamedNetDriver",      // todo:: "xxx *" в "const xxx &"
      "FTickPrerequisite",
      "EOptimizeMode",
      "FCollisionImpactData",      // todo:: не линкует
      "FRigidBodyContactInfo",
      "FSwarmDebugOptions",
      "FAnimUpdateRateParameters",
      "FTimerHandle",
      "FInstanceUpdateCmdBuffer",
      "FStreamingLevelsToConsider",
      "FDisplayDebugManager",
      "UCameraAnim",
      "FCompareFActorPriority",      // todo: переименовывать поля с именами, которые совподают с ключивыми словами C# (метод operator)

      "UActorChannel",      // todo: не генерировать manage оболочку для классов не наследованных от UObject

      "FExampleArray",      // необъявленный идентификатор
      "FExampleItemEntry",
      "FExampleStruct",
      "FQueuedDemoPacket",
      "FNetGUIDCache",
      "FCopyPropertiesForUnrelatedObjectsParams",
      "UAssetManager",
      "ScalarRegister",
      "FQueuedReplayTask",      // todo: не экспортировать абстрактные структруты
      "FSetPlayerStatePawn",      // todo: приватный конструктор
      "FCollisionQueryFlag",      // todo: приватный конструктор

      "APlanarReflection",      // невозможно преобразовать "UPlanarReflectionComponent *" в "UObject *", но почему?
      "ULevelActorContainer",      // невозможно преобразовать "ULevelActorContainer *" в "UObject *"

      "FInputModeDataBase",      // todo:: проверять наличие методов без тела

      "IBlendableInterface",      // todo: различать интерфейсы
      "IImportantToggleSettingInterface",
      "FPrimitiveComponentPostPhysicsTickFunction",      // ExecuteTick абстрактный
      "FCharacterMovementComponentPostPhysicsTickFunction",
      "FSkeletalMeshComponentEndPhysicsTickFunction",
      "FSkeletalMeshComponentClothTickFunction",
      "FStartPhysicsTickFunction",
      "FEndPhysicsTickFunction",
      "FStartAsyncSimulationFunction",
      "UForceFeedbackEffect",      //todo:: пытается ликовать PostEditChangeChainProperty хотя там WITH_EDITOR

      "FSetActorWantsDestroyDuringBeginPlay",
      "FAIMessage", // enum отпредеел в теле класса
      "FAIStimulus",
      "FDebugHelper",
      "FDebugTextInfo",
      "FDebugTraceInfo",
      "UEventSender",
      "FHUDHitBox",      // невозможно преобразовать аргумент 2 из "TArray<FHUDHitBox,FDefaultAllocator>" в "TArray<const FHUDHitBox *,FDefaultAllocator> &"

      "UAIDataProvider_Random", // не линкует
      "ADetourCrowdAIController",
      "AGridPathAIController",
      "UAIAsyncTaskBlueprintProxy"
    ],
    "ManualImplementedClassMasks": [
      "TArray__\\w+"
    ],
    "NewObjectBlackList": [
      "UScene",
      "UWorldProxy",
      "UObjectBase",
      "UObjectBaseUtility",
      "UEngineBaseTypes",
      "UScriptViewportClient",
      "IAIResourceInterface",
      "ICrowdAgentInterface"
    ],
    "EnumBlackList": [
      "Type",
      "EShrinkCapsuleExtent"
    ],
    "DelegateBlackList": [],
    "ManageClassBlackList": [
      "UScene",
      "UWorldProxy",
      "UObject",
      "UObjectBase",
      "UObjectBaseUtility",
      "UEngineBaseTypes",
      "UPostProcessComponent",      // TODO: понять почему не линкует перегруженные методы в базовых классах
      "UBrushComponent",
      "UDrawFrustumComponent",
      "UDrawSphereComponent",
      "UVectorFieldComponent",
      "UReflectionCaptureComponent",
      "UBoxReflectionCaptureComponent",
      "UPlaneReflectionCaptureComponent",
      "USphereReflectionCaptureComponent",
      "UTimelineComponent",
      "ULightmassPortalComponent",
      "UPlanarReflectionComponent",
      "UAssetManager",
      "UTexture",
      "UScriptViewportClient",
      "UShapeComponent"      // todo: не найдена соответствующая перегруженная функция
    ],
    "ReadOnlyClass": [
      "FTickFunction"      // TODO: находить удаленный оператор присваивания
    ],
    "UseConvertToManageType": {
      "TCHAR": "StringWrapper",
      "FName": "StringWrapper",
      "FText": "StringWrapper",
      "FString": "StringWrapper"
    },
    "UseConvertFromManageType": {
      "TCHAR": "char*",
      "FName": "char*",
      "FText": "char*",
      "FString": "char*"
    },
    "MethodInClassBlackList": {
      "UObjectBase": [
        "Register"
      ],
      "UObject": [
        "PostDuplicate",
        "PreSaveRoot",
        "Implements"
      ],
      "UObjectBaseUtility": [
        "CreateClusterFromObject"
      ],
      "UModelComponent": [
        "CommitSurfaces"
      ],
      "ULightmassPortalComponent": [
        "UpdatePreviewShape"
      ],
      "UWindDirectionalSourceComponent": [
        "SetStrength"
      ],
      "UActorComponent": [
        "UpdateComponentToWorld"
      ],
      "USceneCaptureComponent": [
        "GetSettingForShowFlag"
      ],
      "UAudioComponent": [
        "UpdateInteriorSettings"
      ],
      "UTimelineComponent": [
        "OnRep_Timeline"
      ],
      "UPlanarReflectionComponent": [
        "UpdatePreviewShape"
      ],
      "FNamedNetDriver": [
        "NetDriverDef"
      ],
      "UPrimitiveComponent": [
        "DispatchBlockingHit"
      ],
      "FCollisionResponseContainer": [
        "UpdateResponsesFromArray",
        "FillArrayFromResponses"
      ],
      "AActor": [
        "ActorGetDistanceToCollision"        // TODO: указатель на указатель **
      ],
      "UTexture": [
        "GetRunningPlatformData"
      ],
      "FURL": [
        "ToString"        // TODO: конвертировать 0 в false
      ],
      "FDisplayDebugManager": [
        "AddColumnIfNeeded",        // TODO: не линкует, не обрабатывать методы без апи или не имеющих реализации в заголовочном файле
        "GetTextScale"
      ],
      "FPoly": [
        "CalcNormal"
      ],
      "FScale": [
        "Concatenate",        // const cast
        "Inverse"
      ],
      "UGameUserSettings": [
        "GetConfigDir"        // не линкует
      ],
      "FTransform": [
        "DebugEqualMatrix"        // не линкует
      ],
      "UPawnAction": [
        "HandleAIMessage",        // нет имен у аргументов
        "SetInstigator"        //  UObject* const
      ],
      "UNavLocalGridManager": [
        "AddLocalNavigationGridForBox",        //   Необязательные параметры должны быть указаны после всех требуемых параметров
        "AddLocalNavigationGridForCapsule",    //   Необязательные параметры должны быть указаны после всех требуемых параметров
        "AddLocalNavigationGridForPoint"       //   Необязательные параметры должны быть указаны после всех требуемых параметров
      ],
      "FActorPerceptionInfo": [
        "GetLastStimulusLocation",        //   float = null, нужно конвертить хотябы в default
      ]
    },
    "PropertyInClassBlackList": {
      "FWorldContext": [
        "ExternalReferences"
      ],
      "ULocalLightComponent": [
        "CosHalfConeAngle"        //todo:: понять откуда парсер его взял
      ]
    },
    "SystemLiteralList": [
      "base",
      "default",
      "delegate",
      "dynamic",
      "event",
      "float",
      "int",
      "in",
      "object",
      "out",
      "params",
      "string",
      "this"
    ]
  }
}